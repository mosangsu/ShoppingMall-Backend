INFO  22-03-30 09:33:39[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35049 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:33:39[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:33:39[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 87 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:33:39[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:33:39[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:33:39[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:33:39[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@36b53f08
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@36b53f08
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@36b53f08
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b211077
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c9bf3b5
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@734fbae3
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@1c00d406
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@1c00d406
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c00d406
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@45f9d394
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@45f9d394
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@45f9d394
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@283a8ad6
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@283a8ad6
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283a8ad6
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@5ed25612
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@5ed25612
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ed25612
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@5dc7841c
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@5dc7841c
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5dc7841c
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@19bf47fc
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@19bf47fc
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19bf47fc
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@41bb1f09
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@41bb1f09
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41bb1f09
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a4c98d7
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a4c98d7
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4fbb1144
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4fbb1144
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@1b3bec6c
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@1b3bec6c
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c2ab536
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21527b8
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@54463380
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54463380
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@6481dce5
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6481dce5
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@3e2d44f3
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3e2d44f3
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@44384b4a
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@44384b4a
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ab9e43e
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ab9e43e
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a06904
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a06904
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56ec6960
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56ec6960
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5889fc44
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5889fc44
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e27f603
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e27f603
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@5f0677f3
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f0677f3
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@376b5cb2
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@376b5cb2
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@7608a838
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7608a838
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7608a838
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4ab66127
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@3ba3f40d
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3ba3f40d
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3ba3f40d
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4300e240
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7afbf2a0
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@141aba65
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@141aba65
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@54be6213
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54be6213
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@21c75084
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@21c75084
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@a9a8ec3
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a9a8ec3
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6b5352
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6b5352
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f86f9cf
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@d504137
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@d504137
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@d504137
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7eee6c13
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7eee6c13
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7eee6c13
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@3a16984c
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@64b73e0a
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@68e24e7
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@68e24e7
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@68e24e7
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45d389f2
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45d389f2
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45d389f2
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@5563bb40
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@4efb13f1
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@7e2bc2f4
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e2bc2f4
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1930a804
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@7845b21a
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7845b21a
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@5d717f19
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d717f19
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d284f15
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cec590c
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@6f3b13d0
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@1a536164
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a536164
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@455f4483
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e239337
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7996d0d4
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@fcf9525
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@300bb303
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4243341e
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d1c5cf2
DEBUG 22-03-30 09:33:39[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e0986c9
INFO  22-03-30 09:33:39[main] [HikariDataSource:110] - HikariPool-1 - Starting...
ERROR 22-03-30 09:33:41[main] [HikariPool:594] - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com)(port=3306)(type=master) : Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:197)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1394)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:635)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:150)
	at org.mariadb.jdbc.Driver.connect(Driver.java:89)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:188)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:257)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:521)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1389)
	... 115 common frames omitted
Caused by: java.net.UnknownHostException: uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:252)
	... 117 common frames omitted
WARN  22-03-30 09:33:41[main] [JdbcEnvironmentInitiator:133] - HHH000342: Could not obtain connection to query metadata
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com)(port=3306)(type=master) : Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:197)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1394)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:635)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:150)
	at org.mariadb.jdbc.Driver.connect(Driver.java:89)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:188)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:257)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:521)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1389)
	... 115 common frames omitted
Caused by: java.net.UnknownHostException: uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:252)
	... 117 common frames omitted
ERROR 22-03-30 09:33:41[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
WARN  22-03-30 09:33:41[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
INFO  22-03-30 09:33:41[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-03-30 09:33:41[main] [SpringApplication:819] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 82 common frames omitted
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:138)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 99 common frames omitted
ERROR 22-03-30 09:33:41[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@77d2e85] to prepare test instance [com.uniwear.backend.BackendApplicationTests@2e8b24a1]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 67 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 82 common frames omitted
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:138)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 99 common frames omitted
INFO  22-03-30 09:35:35[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35134 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:35:35[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:35:35[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 85 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:35:35[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:35:36[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:35:36[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:35:36[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@62058742
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@62058742
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62058742
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@38732372
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c6c2a73
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@590013c7
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@8ac12e6
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@8ac12e6
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@8ac12e6
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@3a861417
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@3a861417
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a861417
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@6ba6557e
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@6ba6557e
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ba6557e
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@2bdb5e0f
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@2bdb5e0f
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2bdb5e0f
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@384472bf
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@384472bf
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@384472bf
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@9e33a6a
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@9e33a6a
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9e33a6a
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@18d30e7
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@18d30e7
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@18d30e7
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b07cad0
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b07cad0
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12e5d3e1
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12e5d3e1
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@351e89fc
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@351e89fc
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e2b3026
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2e2b9f53
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@22fb9a2c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@22fb9a2c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@360d41d0
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@360d41d0
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@61d2f267
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@61d2f267
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@23c7cb18
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@23c7cb18
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2c34402
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2c34402
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7d88fa9c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7d88fa9c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64fdcf99
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64fdcf99
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@786a3477
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@786a3477
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6658f08a
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6658f08a
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@6136e1fc
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6136e1fc
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@7e77678c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e77678c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@71e2c6d8
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@71e2c6d8
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@71e2c6d8
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@106cd9c8
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@21a6a494
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21a6a494
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21a6a494
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cd3fc29
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@46ab4efc
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@37a67cf
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37a67cf
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@5e0f2c82
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5e0f2c82
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b2ef50e
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b2ef50e
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@2ef041bb
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ef041bb
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d815fb7
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d815fb7
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d0114c0
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@3b39e79b
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b39e79b
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@3b39e79b
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3386c206
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3386c206
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3386c206
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@1a17dd6f
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@5ab63a04
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@3db1ce78
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@3db1ce78
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@3db1ce78
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@645dc557
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@645dc557
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@645dc557
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@c732e1c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@340c5fb6
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@4efb13f1
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4efb13f1
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@40f1aa95
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@1930a804
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1930a804
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@7845b21a
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7845b21a
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13fe5bb7
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ef2b8e5
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@cec590c
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@5c33008f
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5c33008f
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79ad1774
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@64f3ca6
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3df77dfa
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@721fc2e3
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63187d63
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ccdc7aa
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a536164
DEBUG 22-03-30 09:35:36[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1657b017
INFO  22-03-30 09:35:36[main] [HikariDataSource:110] - HikariPool-1 - Starting...
ERROR 22-03-30 09:35:37[main] [HikariPool:594] - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com)(port=3306)(type=master) : Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:197)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1394)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:635)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:150)
	at org.mariadb.jdbc.Driver.connect(Driver.java:89)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:188)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:257)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:521)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1389)
	... 115 common frames omitted
Caused by: java.net.UnknownHostException: uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:252)
	... 117 common frames omitted
WARN  22-03-30 09:35:37[main] [JdbcEnvironmentInitiator:133] - HHH000342: Could not obtain connection to query metadata
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com)(port=3306)(type=master) : Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:197)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1394)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:635)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:150)
	at org.mariadb.jdbc.Driver.connect(Driver.java:89)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com, port:3306. uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:188)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:257)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:521)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1389)
	... 115 common frames omitted
Caused by: java.net.UnknownHostException: uniwear.c8rebbi0rmue.ap-northeast-2.rds.amazonaws.com
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:252)
	... 117 common frames omitted
ERROR 22-03-30 09:35:37[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
WARN  22-03-30 09:35:37[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
INFO  22-03-30 09:35:37[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 22-03-30 09:35:37[main] [SpringApplication:819] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 82 common frames omitted
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:138)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 99 common frames omitted
ERROR 22-03-30 09:35:37[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@c2db68f] to prepare test instance [com.uniwear.backend.BackendApplicationTests@6ace919c]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:730)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:412)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:121)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	... 67 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 82 common frames omitted
Caused by: org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:100)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:138)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 99 common frames omitted
INFO  22-03-30 09:37:25[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35226 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:37:25[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:37:25[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:37:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:37:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 86 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:37:26[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:37:26[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:37:26[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@54329480
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@54329480
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54329480
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b770d07
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f07d414
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@223967ea
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@16ac4d3d
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@16ac4d3d
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16ac4d3d
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@1c2d63f0
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@1c2d63f0
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c2d63f0
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@59e082f8
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@59e082f8
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@59e082f8
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@451816fd
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@451816fd
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@451816fd
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@4d67d5a4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@4d67d5a4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d67d5a4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@71dd4624
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@71dd4624
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71dd4624
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@349f0ca4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@349f0ca4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@349f0ca4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@668a32a4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@668a32a4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e2b3026
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e2b3026
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@53f7a906
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@53f7a906
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22fb9a2c
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cc1f72c
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@819fb19
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@819fb19
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@12365bd8
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@12365bd8
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@23afc725
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@23afc725
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cc3e49b
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cc3e49b
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10dfa7ef
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10dfa7ef
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@fabef2e
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@fabef2e
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f8c3646
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f8c3646
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6598caab
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6598caab
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6136e1fc
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6136e1fc
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@9d99851
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@9d99851
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@775f15fd
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@775f15fd
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@75839695
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75839695
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75839695
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@236861da
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@108b121f
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@108b121f
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@108b121f
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f409872
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2a6fb62f
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@3356ff58
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3356ff58
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@48a46b0f
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48a46b0f
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@d16209e
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d16209e
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@6d0114c0
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6d0114c0
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d6713dd
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d6713dd
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@adafe19
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@8432469
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@8432469
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@8432469
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ab63a04
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ab63a04
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ab63a04
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@3db1ce78
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@57c6feea
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@c732e1c
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@c732e1c
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@c732e1c
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@308e87a1
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@308e87a1
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@308e87a1
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@11148dc2
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@7bb4ed71
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@67eeb310
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@67eeb310
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@bd4ee01
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@51f01535
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@51f01535
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@18715bb
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@18715bb
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44bbb7c6
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1570cad0
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@2964511
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@1657b017
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1657b017
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e239337
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7996d0d4
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@fcf9525
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@300bb303
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4243341e
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d1c5cf2
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e0986c9
DEBUG 22-03-30 09:37:26[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1377b1a0
INFO  22-03-30 09:37:26[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-03-30 09:37:26[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-03-30 09:37:26[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
DEBUG 22-03-30 09:37:26[main] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c3f43d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@632d4cf2]
INFO  22-03-30 09:37:26[main] [PojoInstantiator:67] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
WARN  22-03-30 09:37:26[main] [RootClass:287] - HHH000038: Composite-id class does not override equals(): com.uniwear.backend.entity.ProductOptionGroupId
WARN  22-03-30 09:37:26[main] [RootClass:290] - HHH000039: Composite-id class does not override hashCode(): com.uniwear.backend.entity.ProductOptionGroupId
DEBUG 22-03-30 09:37:26[main] [EnumType:126] - Using NAMED-based conversion for Enum com.uniwear.backend.enumeration.Role
DEBUG 22-03-30 09:37:26[main] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c3f43d1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@74619273]
INFO  22-03-30 09:37:27[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
INFO  22-03-30 09:37:27[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
TRACE 22-03-30 09:37:27[main] [TypeConfiguration$Scope:202] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@74619273] for TypeConfiguration
INFO  22-03-30 09:37:27[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-03-30 09:37:28[main] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1988e095, org.springframework.security.web.context.SecurityContextPersistenceFilter@5afbbf9b, org.springframework.security.web.header.HeaderWriterFilter@3c9cab4, org.springframework.web.filter.CorsFilter@7ec63b9a, org.springframework.security.web.authentication.logout.LogoutFilter@3c48bbf3, com.uniwear.backend.filter.JwtRequestFilter@7e2c8622, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cf933b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37e7e089, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f1a4d61, org.springframework.security.web.session.SessionManagementFilter@7baf7a9d, org.springframework.security.web.access.ExceptionTranslationFilter@39068df9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26c24e5]
INFO  22-03-30 09:37:28[main] [BackendApplicationTests:61] - Started BackendApplicationTests in 3.483 seconds (JVM running for 3.953)
ERROR 22-03-30 09:37:29[scheduling-1] [TaskUtils$LoggingErrorHandler:95] - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:54)
	at com.uniwear.backend.util.RedisUtil.getData(RedisUtil.java:20)
	at com.uniwear.backend.scheduler.TokenRefreshScheduler.getRestDeInfo(TokenRefreshScheduler.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:328)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 25 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
	at io.lettuce.core.DefaultConnectionFuture.get(DefaultConnectionFuture.java:69)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:325)
	... 30 common frames omitted
INFO  22-03-30 09:37:29[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 22-03-30 09:37:29[SpringApplicationShutdownHook] [TypeConfiguration$Scope:208] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@74619273] for TypeConfiguration
DEBUG 22-03-30 09:37:29[SpringApplicationShutdownHook] [TypeConfiguration$Scope:345] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6414b3e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@74619273]
INFO  22-03-30 09:37:29[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-03-30 09:37:29[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-03-30 09:37:38[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35241 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:37:38[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:37:38[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 131 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:38[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:37:38[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:37:39[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:37:39[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@7b211077
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@7b211077
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b211077
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9bf3b5
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@734fbae3
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53e93fb7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@6ba6557e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@6ba6557e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6ba6557e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@2bdb5e0f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@2bdb5e0f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bdb5e0f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@384472bf
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@384472bf
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@384472bf
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@9e33a6a
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@9e33a6a
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9e33a6a
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@18d30e7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@18d30e7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@18d30e7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@4b07cad0
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@4b07cad0
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b07cad0
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@12e5d3e1
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@12e5d3e1
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@12e5d3e1
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@351e89fc
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@351e89fc
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@79d63a4f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@79d63a4f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@4c2ab536
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@4c2ab536
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@21527b8
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@360d41d0
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@61d2f267
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61d2f267
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@23c7cb18
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@23c7cb18
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@2c34402
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2c34402
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d88fa9c
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7d88fa9c
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64fdcf99
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64fdcf99
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@786a3477
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@786a3477
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@667797f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@667797f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4536a715
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4536a715
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@738a815c
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@738a815c
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@46b6701e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46b6701e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@78318ac2
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@78318ac2
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4ab66127
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ab66127
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ab66127
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55951fcd
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@b5312df
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b5312df
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b5312df
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@37a67cf
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e0f2c82
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@6b2ef50e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6b2ef50e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@2ef041bb
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ef041bb
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d815fb7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d815fb7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@7e050be1
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7e050be1
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2f86f9cf
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2f86f9cf
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6ef1c3f7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@1a17dd6f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@1a17dd6f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@1a17dd6f
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@41e8d917
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@41e8d917
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@41e8d917
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@64b73e0a
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@645dc557
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@211a9647
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@211a9647
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@211a9647
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5563bb40
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5563bb40
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5563bb40
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@4efb13f1
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@40f1aa95
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@1930a804
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1930a804
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@456aa471
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@13fe5bb7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@13fe5bb7
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@7d284f15
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d284f15
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@cec590c
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63a84bb6
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@59b447a4
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@455f4483
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@455f4483
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@300bb303
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4243341e
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d1c5cf2
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7e0986c9
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1377b1a0
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@48cf8414
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@27dbaa33
DEBUG 22-03-30 09:37:39[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15d65fcf
INFO  22-03-30 09:37:39[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-03-30 09:37:39[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-03-30 09:37:39[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
DEBUG 22-03-30 09:37:39[main] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@542ff147] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2d801d8]
INFO  22-03-30 09:37:39[main] [PojoInstantiator:67] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
WARN  22-03-30 09:37:39[main] [RootClass:287] - HHH000038: Composite-id class does not override equals(): com.uniwear.backend.entity.ProductOptionGroupId
WARN  22-03-30 09:37:39[main] [RootClass:290] - HHH000039: Composite-id class does not override hashCode(): com.uniwear.backend.entity.ProductOptionGroupId
DEBUG 22-03-30 09:37:39[main] [EnumType:126] - Using NAMED-based conversion for Enum com.uniwear.backend.enumeration.Role
DEBUG 22-03-30 09:37:39[main] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@542ff147] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@32d1d6c5]
INFO  22-03-30 09:37:39[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
INFO  22-03-30 09:37:39[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
TRACE 22-03-30 09:37:39[main] [TypeConfiguration$Scope:202] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@32d1d6c5] for TypeConfiguration
INFO  22-03-30 09:37:39[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-03-30 09:37:40[main] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@210e971e, org.springframework.security.web.context.SecurityContextPersistenceFilter@6237927a, org.springframework.security.web.header.HeaderWriterFilter@cf933b1, org.springframework.web.filter.CorsFilter@1b9785aa, org.springframework.security.web.authentication.logout.LogoutFilter@2c6ed95a, com.uniwear.backend.filter.JwtRequestFilter@3b863b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c7f3af6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62284954, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@340f4723, org.springframework.security.web.session.SessionManagementFilter@6ea4b4b2, org.springframework.security.web.access.ExceptionTranslationFilter@3d95100f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@627dfd9f]
INFO  22-03-30 09:37:40[main] [BackendApplicationTests:61] - Started BackendApplicationTests in 3.087 seconds (JVM running for 3.509)
ERROR 22-03-30 09:37:41[scheduling-1] [TaskUtils$LoggingErrorHandler:95] - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:54)
	at com.uniwear.backend.util.RedisUtil.getData(RedisUtil.java:20)
	at com.uniwear.backend.scheduler.TokenRefreshScheduler.refreshTokenSchedule(TokenRefreshScheduler.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:328)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 25 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
	at io.lettuce.core.DefaultConnectionFuture.get(DefaultConnectionFuture.java:69)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:325)
	... 30 common frames omitted
INFO  22-03-30 09:37:41[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 22-03-30 09:37:41[SpringApplicationShutdownHook] [TypeConfiguration$Scope:208] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@32d1d6c5] for TypeConfiguration
DEBUG 22-03-30 09:37:41[SpringApplicationShutdownHook] [TypeConfiguration$Scope:345] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@790a7c57] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@32d1d6c5]
INFO  22-03-30 09:37:41[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-03-30 09:37:41[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-03-30 09:37:57[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35254 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:37:57[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:37:57[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 88 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:37:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:37:58[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:37:58[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:37:58[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@6c9bf3b5
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@6c9bf3b5
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c9bf3b5
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@734fbae3
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@53e93fb7
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c00d406
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@1c2d63f0
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@1c2d63f0
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c2d63f0
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@59e082f8
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@59e082f8
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59e082f8
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@451816fd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@451816fd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@451816fd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@4d67d5a4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@4d67d5a4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d67d5a4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@71dd4624
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@71dd4624
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@71dd4624
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@349f0ca4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@349f0ca4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@349f0ca4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@668a32a4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@668a32a4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@668a32a4
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e2b3026
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e2b3026
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@53f7a906
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@53f7a906
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@21527b8
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@21527b8
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@360d41d0
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@819fb19
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@12365bd8
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12365bd8
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@23afc725
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@23afc725
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@5cc3e49b
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5cc3e49b
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10dfa7ef
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10dfa7ef
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@fabef2e
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@fabef2e
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7f8c3646
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7f8c3646
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6598caab
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6598caab
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4522d793
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4522d793
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@762405bf
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@762405bf
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@376b5cb2
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@376b5cb2
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@7608a838
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7608a838
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@55951fcd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55951fcd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55951fcd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ba3f40d
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@472c9f88
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@472c9f88
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@472c9f88
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a6fb62f
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3356ff58
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@48a46b0f
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48a46b0f
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@d16209e
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d16209e
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d0114c0
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d0114c0
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@1d6713dd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1d6713dd
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ef1c3f7
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ef1c3f7
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d504137
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@5ab63a04
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ab63a04
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@5ab63a04
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3db1ce78
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3db1ce78
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3db1ce78
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@645dc557
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@c732e1c
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@308e87a1
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@308e87a1
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@308e87a1
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4efb13f1
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4efb13f1
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4efb13f1
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@40f1aa95
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@15e08615
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@456aa471
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@456aa471
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c25d0d1
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@3ef2b8e5
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3ef2b8e5
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@cec590c
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@cec590c
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@63a84bb6
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27896d3b
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@71f0806b
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@300bb303
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@300bb303
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1377b1a0
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48cf8414
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27dbaa33
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15d65fcf
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b021664
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f59da34
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@752973de
DEBUG 22-03-30 09:37:58[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52a67293
INFO  22-03-30 09:37:58[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-03-30 09:37:58[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-03-30 09:37:58[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
DEBUG 22-03-30 09:37:58[main] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@298e002d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6b9a1205]
INFO  22-03-30 09:37:58[main] [PojoInstantiator:67] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
WARN  22-03-30 09:37:58[main] [RootClass:287] - HHH000038: Composite-id class does not override equals(): com.uniwear.backend.entity.ProductOptionGroupId
WARN  22-03-30 09:37:58[main] [RootClass:290] - HHH000039: Composite-id class does not override hashCode(): com.uniwear.backend.entity.ProductOptionGroupId
DEBUG 22-03-30 09:37:58[main] [EnumType:126] - Using NAMED-based conversion for Enum com.uniwear.backend.enumeration.Role
DEBUG 22-03-30 09:37:58[main] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@298e002d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2d172c7]
INFO  22-03-30 09:37:58[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
INFO  22-03-30 09:37:58[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
TRACE 22-03-30 09:37:59[main] [TypeConfiguration$Scope:202] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2d172c7] for TypeConfiguration
INFO  22-03-30 09:37:59[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-03-30 09:37:59[main] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d956649, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b862f17, org.springframework.security.web.header.HeaderWriterFilter@58f05266, org.springframework.web.filter.CorsFilter@21b508a0, org.springframework.security.web.authentication.logout.LogoutFilter@75392381, com.uniwear.backend.filter.JwtRequestFilter@78fd1179, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ca50bb9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6903ef57, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16d7f503, org.springframework.security.web.session.SessionManagementFilter@2850fe85, org.springframework.security.web.access.ExceptionTranslationFilter@cf933b1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70882cb7]
INFO  22-03-30 09:38:00[main] [BackendApplicationTests:61] - Started BackendApplicationTests in 3.056 seconds (JVM running for 3.551)
ERROR 22-03-30 09:38:00[scheduling-1] [TaskUtils$LoggingErrorHandler:95] - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:54)
	at com.uniwear.backend.util.RedisUtil.getData(RedisUtil.java:20)
	at com.uniwear.backend.scheduler.TokenRefreshScheduler.refreshTokenSchedule(TokenRefreshScheduler.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:328)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 25 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
	at io.lettuce.core.DefaultConnectionFuture.get(DefaultConnectionFuture.java:69)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:325)
	... 30 common frames omitted
INFO  22-03-30 09:38:00[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 22-03-30 09:38:00[SpringApplicationShutdownHook] [TypeConfiguration$Scope:208] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2d172c7] for TypeConfiguration
DEBUG 22-03-30 09:38:00[SpringApplicationShutdownHook] [TypeConfiguration$Scope:345] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@23812d5e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2d172c7]
INFO  22-03-30 09:38:00[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-03-30 09:38:00[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-03-30 09:39:21[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35382 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:39:21[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:39:21[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 90 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:39:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:39:22[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:39:22[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:39:22[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@aca2fc3
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@aca2fc3
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@aca2fc3
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@639cb788
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6a4af081
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@64f32e9e
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@40faff12
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@40faff12
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@40faff12
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@2326180c
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@2326180c
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2326180c
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@1f172892
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@1f172892
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f172892
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@5c9e8a67
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@5c9e8a67
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c9e8a67
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@656ec00d
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@656ec00d
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@656ec00d
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@c497a55
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@c497a55
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c497a55
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@72b40f87
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@72b40f87
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72b40f87
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@507049f2
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@507049f2
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ed31735
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ed31735
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@2b682e9
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b682e9
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38bc5ac0
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@749baa0c
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@2084e65a
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2084e65a
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@4586a8aa
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4586a8aa
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@26d40c77
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@26d40c77
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@30fbc23
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@30fbc23
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f883d90
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f883d90
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3eac2e8a
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3eac2e8a
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@9f0fc36
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@9f0fc36
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@286866cb
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@286866cb
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37c2f0b4
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37c2f0b4
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@1736c1e4
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1736c1e4
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@113eed88
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@113eed88
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4228f269
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4228f269
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4228f269
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1552da16
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@794c5f5e
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@794c5f5e
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@794c5f5e
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@55951fcd
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2ff498b0
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@5822ecda
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5822ecda
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@98637a2
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@98637a2
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f867b0c
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f867b0c
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@45e7bb79
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@45e7bb79
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51af8049
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51af8049
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@40016ce1
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@3ee6dc82
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@3ee6dc82
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@3ee6dc82
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1322b575
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1322b575
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1322b575
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@be6d228
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@677cc4e8
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@3a3ad8e7
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a3ad8e7
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@3a3ad8e7
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48c5698
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48c5698
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48c5698
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@6aad919c
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@322b09da
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@7bb4ed71
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7bb4ed71
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c72189f
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@bd4ee01
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@bd4ee01
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@51f01535
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51f01535
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4276ad40
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@49190ed6
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@1570cad0
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@45d7495e
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45d7495e
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64f3ca6
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3df77dfa
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@721fc2e3
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63187d63
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ccdc7aa
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a536164
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1657b017
DEBUG 22-03-30 09:39:22[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@368424db
INFO  22-03-30 09:39:22[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-03-30 09:39:22[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-03-30 09:39:22[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
DEBUG 22-03-30 09:39:22[main] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@503556cb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c9e19de]
INFO  22-03-30 09:39:22[main] [PojoInstantiator:67] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
WARN  22-03-30 09:39:22[main] [RootClass:287] - HHH000038: Composite-id class does not override equals(): com.uniwear.backend.entity.ProductOptionGroupId
WARN  22-03-30 09:39:22[main] [RootClass:290] - HHH000039: Composite-id class does not override hashCode(): com.uniwear.backend.entity.ProductOptionGroupId
DEBUG 22-03-30 09:39:22[main] [EnumType:126] - Using NAMED-based conversion for Enum com.uniwear.backend.enumeration.Role
DEBUG 22-03-30 09:39:22[main] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@503556cb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@309cf657]
INFO  22-03-30 09:39:22[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
INFO  22-03-30 09:39:23[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
TRACE 22-03-30 09:39:23[main] [TypeConfiguration$Scope:202] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@309cf657] for TypeConfiguration
INFO  22-03-30 09:39:23[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-03-30 09:39:24[main] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@627dfd9f, org.springframework.security.web.context.SecurityContextPersistenceFilter@209ab1d7, org.springframework.security.web.header.HeaderWriterFilter@213d5189, org.springframework.web.filter.CorsFilter@35e64c7b, org.springframework.security.web.authentication.logout.LogoutFilter@4ca50bb9, com.uniwear.backend.filter.JwtRequestFilter@ea3491d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ece769a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5afbbf9b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17179a7e, org.springframework.security.web.session.SessionManagementFilter@517d68b8, org.springframework.security.web.access.ExceptionTranslationFilter@2b08f55a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c5e6da]
INFO  22-03-30 09:39:24[main] [BackendApplicationTests:61] - Started BackendApplicationTests in 3.409 seconds (JVM running for 3.899)
ERROR 22-03-30 09:39:24[scheduling-1] [TaskUtils$LoggingErrorHandler:95] - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:54)
	at com.uniwear.backend.util.RedisUtil.getData(RedisUtil.java:20)
	at com.uniwear.backend.scheduler.TokenRefreshScheduler.getRestDeInfo(TokenRefreshScheduler.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:328)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 25 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
	at io.lettuce.core.DefaultConnectionFuture.get(DefaultConnectionFuture.java:69)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:325)
	... 30 common frames omitted
INFO  22-03-30 09:39:24[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 22-03-30 09:39:24[SpringApplicationShutdownHook] [TypeConfiguration$Scope:208] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@309cf657] for TypeConfiguration
DEBUG 22-03-30 09:39:24[SpringApplicationShutdownHook] [TypeConfiguration$Scope:345] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e9114e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@309cf657]
INFO  22-03-30 09:39:24[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-03-30 09:39:24[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-03-30 09:41:47[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35479 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:41:47[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:41:47[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 87 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:41:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:41:47[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:41:47[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:41:48[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b770d07
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@3b770d07
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b770d07
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f07d414
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@223967ea
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a861417
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@1f172892
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@1f172892
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f172892
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@5c9e8a67
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@5c9e8a67
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c9e8a67
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@656ec00d
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@656ec00d
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@656ec00d
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@c497a55
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@c497a55
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c497a55
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@72b40f87
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@72b40f87
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72b40f87
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@507049f2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@507049f2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@507049f2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@5ed31735
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@5ed31735
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ed31735
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b682e9
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b682e9
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e2b9f53
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e2b9f53
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@22fb9a2c
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@22fb9a2c
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cc1f72c
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4586a8aa
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@26d40c77
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@26d40c77
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@30fbc23
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30fbc23
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@5f883d90
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f883d90
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eac2e8a
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3eac2e8a
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@9f0fc36
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@9f0fc36
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@286866cb
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@286866cb
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@184751f3
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@184751f3
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6658f08a
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6658f08a
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2565a7d0
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2565a7d0
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@3686389
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3686389
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@77ce88c4
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77ce88c4
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@236861da
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@236861da
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@236861da
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3513d214
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@4300e240
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4300e240
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4300e240
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5822ecda
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@98637a2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@6f867b0c
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f867b0c
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@45e7bb79
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45e7bb79
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@51af8049
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@51af8049
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@1b47b7f5
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b47b7f5
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@adafe19
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@adafe19
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3386c206
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@be6d228
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@be6d228
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@be6d228
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ae5bd34
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ae5bd34
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ae5bd34
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@57c6feea
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@48c5698
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@340c5fb6
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@340c5fb6
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@340c5fb6
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11148dc2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11148dc2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11148dc2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@7bb4ed71
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@1c72189f
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@bd4ee01
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bd4ee01
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@69e2fe3b
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@4276ad40
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4276ad40
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@44bbb7c6
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44bbb7c6
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1570cad0
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@701d2b59
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@69ba3f4e
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@6e239337
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e239337
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4243341e
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d1c5cf2
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e0986c9
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1377b1a0
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48cf8414
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27dbaa33
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15d65fcf
DEBUG 22-03-30 09:41:48[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b021664
INFO  22-03-30 09:41:48[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-03-30 09:41:48[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-03-30 09:41:48[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
DEBUG 22-03-30 09:41:48[main] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d801d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b9b97ad]
INFO  22-03-30 09:41:48[main] [PojoInstantiator:67] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
WARN  22-03-30 09:41:48[main] [RootClass:287] - HHH000038: Composite-id class does not override equals(): com.uniwear.backend.entity.ProductOptionGroupId
WARN  22-03-30 09:41:48[main] [RootClass:290] - HHH000039: Composite-id class does not override hashCode(): com.uniwear.backend.entity.ProductOptionGroupId
DEBUG 22-03-30 09:41:48[main] [EnumType:126] - Using NAMED-based conversion for Enum com.uniwear.backend.enumeration.Role
DEBUG 22-03-30 09:41:48[main] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d801d8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4a5b38e6]
INFO  22-03-30 09:41:48[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
INFO  22-03-30 09:41:48[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
TRACE 22-03-30 09:41:48[main] [TypeConfiguration$Scope:202] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4a5b38e6] for TypeConfiguration
INFO  22-03-30 09:41:48[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-03-30 09:41:50[main] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30407f28, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a5ea4cf, org.springframework.security.web.header.HeaderWriterFilter@517d68b8, org.springframework.web.filter.CorsFilter@2dac4d04, org.springframework.security.web.authentication.logout.LogoutFilter@32cfd722, com.uniwear.backend.filter.JwtRequestFilter@7e2c8622, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37e7e089, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@41030c21, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@367a245e, org.springframework.security.web.session.SessionManagementFilter@4f7bc9a3, org.springframework.security.web.access.ExceptionTranslationFilter@10f64bc3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22277482]
INFO  22-03-30 09:41:50[main] [BackendApplicationTests:61] - Started BackendApplicationTests in 3.5 seconds (JVM running for 3.966)
ERROR 22-03-30 09:41:50[scheduling-1] [TaskUtils$LoggingErrorHandler:95] - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:54)
	at com.uniwear.backend.util.RedisUtil.getData(RedisUtil.java:20)
	at com.uniwear.backend.scheduler.TokenRefreshScheduler.getRestDeInfo(TokenRefreshScheduler.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:328)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 25 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
	at io.lettuce.core.DefaultConnectionFuture.get(DefaultConnectionFuture.java:69)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:325)
	... 30 common frames omitted
INFO  22-03-30 09:41:50[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 22-03-30 09:41:50[SpringApplicationShutdownHook] [TypeConfiguration$Scope:208] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4a5b38e6] for TypeConfiguration
DEBUG 22-03-30 09:41:50[SpringApplicationShutdownHook] [TypeConfiguration$Scope:345] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5815e689] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a5b38e6]
INFO  22-03-30 09:41:50[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-03-30 09:41:50[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-03-30 09:42:10[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35505 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:42:10[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:42:10[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 86 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:42:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:42:11[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:42:11[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:42:11[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@36df4c26
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@36df4c26
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@36df4c26
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fee69a1
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@36b53f08
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@7b211077
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@734fbae3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@734fbae3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@734fbae3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@68e47e7
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@68e47e7
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68e47e7
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@5409dfdd
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@5409dfdd
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5409dfdd
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@2262f0d8
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@2262f0d8
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2262f0d8
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@3b8507df
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@3b8507df
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3b8507df
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@7493d937
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@7493d937
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7493d937
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@2475fba3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@2475fba3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2475fba3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e94669c
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e94669c
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fb082ff
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fb082ff
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@15586843
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@15586843
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ef037e4
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b3bec6c
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@1b8fa2fa
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1b8fa2fa
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@3dc82e6a
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3dc82e6a
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@85ab964
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@85ab964
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d74cbbd
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d74cbbd
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7e58f697
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7e58f697
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@352f6727
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@352f6727
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63f2e0b
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63f2e0b
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ce561cc
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ce561cc
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35dcd032
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35dcd032
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@32dcfeea
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32dcfeea
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@5f0677f3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5f0677f3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@376b5cb2
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@376b5cb2
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@376b5cb2
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@78318ac2
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@4ab66127
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ab66127
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ab66127
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3513d214
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@b5312df
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@5908e6d6
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5908e6d6
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@4afd65fd
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4afd65fd
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b5ad306
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b5ad306
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@605c7a9e
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@605c7a9e
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@376af784
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@376af784
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@203765b2
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@2f86f9cf
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f86f9cf
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@2f86f9cf
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6dded900
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6dded900
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6dded900
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@60c96eb4
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@4c6bba7d
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@6a6d1ff3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@6a6d1ff3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@6a6d1ff3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17884d
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17884d
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17884d
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@56c42964
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@45d389f2
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@5112b7
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5112b7
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@14be750c
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@7f93f4c
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7f93f4c
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@2321e482
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2321e482
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6e5f5478
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d717f19
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@21090c88
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@30517a57
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30517a57
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3df77dfa
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@721fc2e3
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63187d63
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1ccdc7aa
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a536164
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1657b017
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@368424db
DEBUG 22-03-30 09:42:11[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44864536
INFO  22-03-30 09:42:11[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-03-30 09:42:11[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-03-30 09:42:11[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
DEBUG 22-03-30 09:42:11[main] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c9e19de] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12aa381f]
INFO  22-03-30 09:42:12[main] [PojoInstantiator:67] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
WARN  22-03-30 09:42:12[main] [RootClass:287] - HHH000038: Composite-id class does not override equals(): com.uniwear.backend.entity.ProductOptionGroupId
WARN  22-03-30 09:42:12[main] [RootClass:290] - HHH000039: Composite-id class does not override hashCode(): com.uniwear.backend.entity.ProductOptionGroupId
DEBUG 22-03-30 09:42:12[main] [EnumType:126] - Using NAMED-based conversion for Enum com.uniwear.backend.enumeration.Role
DEBUG 22-03-30 09:42:12[main] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c9e19de] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4d4c4b14]
INFO  22-03-30 09:42:12[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
INFO  22-03-30 09:42:12[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
TRACE 22-03-30 09:42:12[main] [TypeConfiguration$Scope:202] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4d4c4b14] for TypeConfiguration
INFO  22-03-30 09:42:12[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-03-30 09:42:13[main] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@627dfd9f, org.springframework.security.web.context.SecurityContextPersistenceFilter@209ab1d7, org.springframework.security.web.header.HeaderWriterFilter@213d5189, org.springframework.web.filter.CorsFilter@35e64c7b, org.springframework.security.web.authentication.logout.LogoutFilter@4ca50bb9, com.uniwear.backend.filter.JwtRequestFilter@696d28ee, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ece769a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5afbbf9b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17179a7e, org.springframework.security.web.session.SessionManagementFilter@517d68b8, org.springframework.security.web.access.ExceptionTranslationFilter@2b08f55a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6c5e6da]
INFO  22-03-30 09:42:13[main] [BackendApplicationTests:61] - Started BackendApplicationTests in 3.053 seconds (JVM running for 3.498)
ERROR 22-03-30 09:42:13[scheduling-1] [TaskUtils$LoggingErrorHandler:95] - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:54)
	at com.uniwear.backend.util.RedisUtil.getData(RedisUtil.java:20)
	at com.uniwear.backend.scheduler.TokenRefreshScheduler.getRestDeInfo(TokenRefreshScheduler.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:328)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 25 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
	at io.lettuce.core.DefaultConnectionFuture.get(DefaultConnectionFuture.java:69)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:325)
	... 30 common frames omitted
INFO  22-03-30 09:42:14[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 22-03-30 09:42:14[SpringApplicationShutdownHook] [TypeConfiguration$Scope:208] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4d4c4b14] for TypeConfiguration
DEBUG 22-03-30 09:42:14[SpringApplicationShutdownHook] [TypeConfiguration$Scope:345] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1a010c9a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4d4c4b14]
INFO  22-03-30 09:42:14[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-03-30 09:42:14[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  22-03-30 09:44:25[main] [BackendApplicationTests:55] - Starting BackendApplicationTests using Java 17.0.2 on Sangui-MacBookPro.local with PID 35568 (started by sangsumo in /Users/sangsumo/Documents/git/uniwear-backend)
INFO  22-03-30 09:44:25[background-preinit] [Version:21] - HV000001: Hibernate Validator 6.2.0.Final
INFO  22-03-30 09:44:25[main] [BackendApplicationTests:639] - The following profiles are active: test
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 86 ms. Found 11 JPA repository interfaces.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode!
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductGroupRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CartRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.CategoryRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberCouponRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MemberRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.MenuRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.OrderRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.PointRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductOptionRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.uniwear.backend.repository.ProductRepository. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
INFO  22-03-30 09:44:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
INFO  22-03-30 09:44:25[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  22-03-30 09:44:25[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.3.Final
INFO  22-03-30 09:44:25[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@2fee69a1
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration boolean -> org.hibernate.type.BooleanType@2fee69a1
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2fee69a1
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@36b53f08
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b211077
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration yes_no -> org.hibernate.type.YesNoType@6c9bf3b5
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@53e93fb7
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration byte -> org.hibernate.type.ByteType@53e93fb7
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@53e93fb7
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration character -> org.hibernate.type.CharacterType@719c1faf
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration char -> org.hibernate.type.CharacterType@719c1faf
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@719c1faf
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@20b54cfe
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration short -> org.hibernate.type.ShortType@20b54cfe
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@20b54cfe
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration integer -> org.hibernate.type.IntegerType@44d43cc9
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration int -> org.hibernate.type.IntegerType@44d43cc9
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44d43cc9
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@45cd8607
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration long -> org.hibernate.type.LongType@45cd8607
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@45cd8607
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@600bbf9e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration float -> org.hibernate.type.FloatType@600bbf9e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@600bbf9e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@2864f887
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration double -> org.hibernate.type.DoubleType@2864f887
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2864f887
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b3fc6d8
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b3fc6d8
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@baa227e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@baa227e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration string -> org.hibernate.type.StringType@6ef037e4
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6ef037e4
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1b3bec6c
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4c2ab536
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration url -> org.hibernate.type.UrlType@1d8e9d3e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d8e9d3e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration Duration -> org.hibernate.type.DurationType@46d1b59
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@46d1b59
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration Instant -> org.hibernate.type.InstantType@49cb5030
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@49cb5030
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@561d88ee
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@561d88ee
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7bec8cb0
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7bec8cb0
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1805383
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1805383
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e848aea
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e848aea
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3375b118
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3375b118
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17b6ad97
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@17b6ad97
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration date -> org.hibernate.type.DateType@5103eea2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5103eea2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration time -> org.hibernate.type.TimeType@46b6701e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@46b6701e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration timestamp -> org.hibernate.type.TimestampType@78318ac2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@78318ac2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@78318ac2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7608a838
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration calendar -> org.hibernate.type.CalendarType@55951fcd
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@55951fcd
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@55951fcd
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@108b121f
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@472c9f88
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration locale -> org.hibernate.type.LocaleType@7b44bfb8
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7b44bfb8
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration currency -> org.hibernate.type.CurrencyType@2aa6bbad
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2aa6bbad
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@9f9146d
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9f9146d
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration class -> org.hibernate.type.ClassType@76596288
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76596288
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@203765b2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@203765b2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b6b5352
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration binary -> org.hibernate.type.BinaryType@6ef1c3f7
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ef1c3f7
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration [B -> org.hibernate.type.BinaryType@6ef1c3f7
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@15c16f19
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@15c16f19
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@15c16f19
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration row_version -> org.hibernate.type.RowVersionType@4c6bba7d
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration image -> org.hibernate.type.ImageType@3a16984c
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration characters -> org.hibernate.type.CharArrayType@39c7fb0b
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration char[] -> org.hibernate.type.CharArrayType@39c7fb0b
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration [C -> org.hibernate.type.CharArrayType@39c7fb0b
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56c42964
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56c42964
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56c42964
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration text -> org.hibernate.type.TextType@45d389f2
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration ntext -> org.hibernate.type.NTextType@5563bb40
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration blob -> org.hibernate.type.BlobType@14be750c
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@14be750c
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e2bc2f4
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration clob -> org.hibernate.type.ClobType@27afbf14
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27afbf14
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration nclob -> org.hibernate.type.NClobType@6e5f5478
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6e5f5478
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d717f19
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d284f15
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration serializable -> org.hibernate.type.SerializableType@1999149e
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration object -> org.hibernate.type.ObjectType@3df77dfa
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3df77dfa
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a536164
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1657b017
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@368424db
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@44864536
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@455f4483
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e239337
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7996d0d4
DEBUG 22-03-30 09:44:25[main] [BasicTypeRegistry:157] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@fcf9525
INFO  22-03-30 09:44:25[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  22-03-30 09:44:26[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  22-03-30 09:44:26[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
DEBUG 22-03-30 09:44:26[main] [TypeConfiguration$Scope:149] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bec1589] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57f0bfc3]
INFO  22-03-30 09:44:26[main] [PojoInstantiator:67] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
WARN  22-03-30 09:44:26[main] [RootClass:287] - HHH000038: Composite-id class does not override equals(): com.uniwear.backend.entity.ProductOptionGroupId
WARN  22-03-30 09:44:26[main] [RootClass:290] - HHH000039: Composite-id class does not override hashCode(): com.uniwear.backend.entity.ProductOptionGroupId
DEBUG 22-03-30 09:44:26[main] [EnumType:126] - Using NAMED-based conversion for Enum com.uniwear.backend.enumeration.Role
DEBUG 22-03-30 09:44:26[main] [TypeConfiguration$Scope:154] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1bec1589] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46ee7013]
INFO  22-03-30 09:44:26[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: com.uniwear.backend.entity.OrderProductOption (class must be instantiated by Interceptor)
INFO  22-03-30 09:44:26[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
TRACE 22-03-30 09:44:26[main] [TypeConfiguration$Scope:202] - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46ee7013] for TypeConfiguration
INFO  22-03-30 09:44:26[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
INFO  22-03-30 09:44:27[main] [DefaultSecurityFilterChain:51] - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b6789cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d95100f, org.springframework.security.web.header.HeaderWriterFilter@10c11e36, org.springframework.web.filter.CorsFilter@70882cb7, org.springframework.security.web.authentication.logout.LogoutFilter@6903ef57, com.uniwear.backend.filter.JwtRequestFilter@6012bee8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5afbbf9b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a5ea4cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6980e66a, org.springframework.security.web.session.SessionManagementFilter@7937f96e, org.springframework.security.web.access.ExceptionTranslationFilter@73e0c775, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@283074e8]
INFO  22-03-30 09:44:27[main] [BackendApplicationTests:61] - Started BackendApplicationTests in 2.961 seconds (JVM running for 3.456)
ERROR 22-03-30 09:44:27[scheduling-1] [TaskUtils$LoggingErrorHandler:95] - Unexpected error occurred in scheduled task
org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1689)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1597)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1383)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1366)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1093)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:421)
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193)
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144)
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:210)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:190)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97)
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:54)
	at com.uniwear.backend.util.RedisUtil.getData(RedisUtil.java:20)
	at com.uniwear.backend.scheduler.TokenRefreshScheduler.refreshTokenSchedule(TokenRefreshScheduler.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to localhost/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78)
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:328)
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115)
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1595)
	... 25 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2073)
	at io.lettuce.core.DefaultConnectionFuture.get(DefaultConnectionFuture.java:69)
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:325)
	... 30 common frames omitted
INFO  22-03-30 09:44:28[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
TRACE 22-03-30 09:44:28[SpringApplicationShutdownHook] [TypeConfiguration$Scope:208] - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46ee7013] for TypeConfiguration
DEBUG 22-03-30 09:44:28[SpringApplicationShutdownHook] [TypeConfiguration$Scope:345] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1d63f621] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46ee7013]
INFO  22-03-30 09:44:28[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  22-03-30 09:44:28[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
