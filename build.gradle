plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.uniwear'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	querydsl.extendsFrom compileClasspath
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'
	// implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'	// aws
	implementation 'com.amazonaws:aws-java-sdk:1.12.226'	// aws
	implementation 'com.querydsl:querydsl-jpa'
	// implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5' //LAZY로딩을 강제로 끌어옴
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 대응
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def querydslDir = "build/generated/sources/annotationProcessor/java/main"

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}

// clean task 실행시 QClass 삭제
clean {
    delete file('build/generated/sources/annotationProcessor/java/main') // Annotation processor 생성물 생성 위치
}

jar {
    enabled = false
}